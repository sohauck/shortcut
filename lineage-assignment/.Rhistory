fileName2 <- file.choose(new=TRUE)
write.csv(pairs, file =fileName2)
write.csv(tweets, file=choose.files(caption="Save As...",
filters = c("Comma Delimited Files (.csv)","*.csv")))
tweets <- as.data.frame()
df <- read.csv(file.choose())
df <- data.frame(df[,-1], row.names=df[,1])
df[] <- lapply(df, factor)
View(df)
dissmat <- ncol(df) * as.matrix(daisy(df, metric ="gower"))
library(cluster) # for creating matrix
library(reshape) # for breaking down matrix into pairs
library(ggplot2) # for plots
dissmat <- ncol(df) * as.matrix(daisy(df, metric ="gower"))
View(dissmat)
pairs <- melt(dissmat)[melt(upper.tri(dissmat))$value,]
names(pairs) <- c("c1", "c2", "distance")
View(pairs)
ggplot(pairs, aes(distance)) +
geom_histogram(binwidth=10) + # change histogram to
geom_vline(xintercept=c(850), linetype="dotted") # change intercept to choose cut-off
write.csv(tweets, file=choose.files(caption="Save As...",
filters = c("Comma Delimited Files (.csv)","*.csv")))
write.csv(pairs, file=choose.files(caption="Save As...",
filters = c("Comma Delimited Files (.csv)","*.csv")))
out.file <- paste(gsub(".csv","", infile),"_FINAL.csv",sep="")
library(cluster) # for creating matrix
library(reshape) # for breaking down matrix into pairs
library(ggplot2) # for plots
#open file
infile <- file.choose()
df <- read.csv(infile)
# set up data frame with ids as row names and all variables as factors
df <- data.frame(df[,-1], row.names=df[,1])
df[] <- lapply(df, factor)
# build dissimilarity matrix, including actual locus count (instead of proportion)
dissmat <- ncol(df) * as.matrix(daisy(df, metric ="gower"))
# write matrix to file if wanted (so can avoid this lengthy step in future)
#
# fileName1 <- file.choose(new=TRUE)
# write.csv(dissmat, file =fileName1)
# write pairwise to file
pairs <- melt(dissmat)[melt(upper.tri(dissmat))$value,]
names(pairs) <- c("c1", "c2", "distance")
out.file <- paste(gsub(".csv","", infile),"_FINAL.csv",sep="")
out.file <- paste(gsub(".csv","", infile),"_pairs.csv",sep="")
write.csv(pairs, file=paste(pat,"-num.csv",sep=""))
write.csv(pairs, file=out.file)
